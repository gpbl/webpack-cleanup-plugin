{"version":3,"sources":["../src/getFiles.js"],"names":["getFiles","fromPath","exclude","npath","normalize","files","map","p","substr","length","filter","every","file","join","excluded","dot"],"mappings":";;;;;kBAIwBA,Q;;AAJxB;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,QAAT,CAAkBC,QAAlB,EAA0C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AACvD,MAAMC,QAAQ,eAAKC,SAAL,CAAeH,QAAf,CAAd;AACA,MAAMI,QAAQ,oCAAkBF,KAAlB,EACXG,GADW,CACP;AAAA,WAAKC,EAAEC,MAAF,CAASL,MAAMM,MAAN,GAAe,CAAxB,CAAL;AAAA,GADO,EAC0B;AAD1B,GAEXC,MAFW,CAEJ;AAAA,WACNR,QAAQS,KAAR,CAAc;AAAA,aACZ,CAAC,yBAAUC,IAAV,EAAgB,eAAKC,IAAL,CAAUC,QAAV,CAAhB,EAAqC,EAAEC,KAAK,IAAP,EAArC,CADW;AAAA,KAAd,CADM;AAAA,GAFI,EAOXT,GAPW,CAOP;AAAA,WAAQ,eAAKO,IAAL,CAAUV,KAAV,EAAiBS,IAAjB,CAAR;AAAA,GAPO,CAAd;AAQA,SAAOP,KAAP;AACD","file":"getFiles.js","sourcesContent":["import recursiveReadSync from 'recursive-readdir-sync';\nimport minimatch from 'minimatch';\nimport path from 'path';\n\nexport default function getFiles(fromPath, exclude = []) {\n  const npath = path.normalize(fromPath);\n  const files = recursiveReadSync(npath)\n    .map(p => p.substr(npath.length + 1)) // get files relative to fromPath\n    .filter(file =>\n      exclude.every(excluded =>\n        !minimatch(file, path.join(excluded), { dot: true })\n      )\n    )\n    .map(file => path.join(npath, file));\n  return files;\n}\n"]}